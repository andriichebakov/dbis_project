{"version":3,"sources":["app/hooks.ts","components/AsideChannels/AsideChannelsItem.tsx","components/AsideChannels/AsideChannel.tsx","app/api.ts","features/channel/channelAPI.ts","features/user/userAPI.ts","features/user/userSlice.ts","features/channel/channelSlice.ts","components/AsideChannels/AsideButton.tsx","components/AsideChannels/AsideChannels.tsx","components/AsideContacts/AsideContacts.tsx","components/Channel/CreateChannelForm.tsx","components/Channel/EditChannelForm.tsx","components/Body.tsx","components/Channel/Display.tsx","features/post/postAPI.ts","features/post/postSlice.ts","components/Channel/Field.tsx","components/Channel/Channel.tsx","components/EmptyMain.tsx","assets/logo.png","components/Header/HeaderLogo.tsx","components/Header/HeaderMiddle.tsx","components/Header/HeaderUser.tsx","components/Header/Header.tsx","components/Init.tsx","features/auth/authAPI.ts","features/auth/authSlice.ts","components/InitError.tsx","components/NotFound.tsx","components/Settings.tsx","features/auth/hooks.ts","components/SignIn.tsx","components/SignUp.tsx","features/app/appSlice.ts","features/auth/PrivateRoute.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","useImageUpload","url","useState","img","setImg","getBase64","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleChange","info","file","status","originFileObj","imageUrl","beforeUpload","isJpgOrPng","type","message","error","isLt2M","size","dummyRequest","onSuccess","setTimeout","useErrorMessage","removeAction","dispatch","useEffect","useSuccessMessage","msg","isSucceed","success","AsideChannelsItem","children","className","AsideChannel","channel","to","id","isActive","title","name","placement","src","photo","toUpperCase","template","axios","create","baseURL","withCredentials","channelAPI","get","post","put","page","count","userAPI","userData","fetchUser","createAsyncThunk","a","rejectWithValue","response","data","errors","statusText","updateUser","getState","state","user","fetchUserChannels","portion","userSlice","createSlice","initialState","isFetching","fetchingError","isUpdating","updateSucceed","updatingError","channels","lastPortion","total","isChannelsFetching","channelsFetchingError","reducers","addChannel","action","push","payload","userChanged","userChannelsChanged","channelsFetchingErrorChanged","updateSucceedChanged","updatingErrorChanged","extraReducers","builder","addCase","pending","fulfilled","rejected","items","actions","fetchChannel","fetchPosts","createChannel","creatorClosed","editChannel","editorClosed","channelSlice","posts","totalPosts","isPostFetching","postFetchingError","isCreatorOpened","isCreating","creationError","createdSucceed","isEditorOpened","isEditing","editingError","editedSucceed","creatorOpened","editorOpened","creationErrorChanged","createdSucceedChanged","editedSucceedChanged","postsChanged","postAdded","AsideButton","icon","PlusOutlined","shape","onClick","AsideChannels","isLoading","hide","loading","onScroll","e","scrollHeight","currentTarget","clientHeight","scrollTop","map","reverse","AsideContacts","navigate","useNavigate","userId","useParams","renderEmpty","image","Empty","PRESENTED_IMAGE_SIMPLE","description","length","itemLayout","dataSource","renderItem","item","Item","Meta","avatar","CreateChannelForm","isOpened","succeed","Form","useForm","form","resetFields","centered","visible","onOk","submit","onCancel","okButtonProps","cancelButtonProps","disabled","width","showUploadList","customRequest","onChange","MessageOutlined","onFinish","formData","console","log","rules","required","whitespace","placeholder","initialValue","EditChannelForm","Body","Display","undefined","UserOutlined","author","text","postAPI","sendPost","channelId","statuses","includes","postSlice","isSending","sendingError","TextArea","Input","Field","trim","noStyle","autoFocus","autoSize","maxRows","minRows","onPressEnter","shiftKey","preventDefault","Channel","params","bodyStyle","display","flexDirection","justifyContent","overflowY","height","subTitle","extra","Link","Paragraph","Typography","EmptyMain","strong","HeaderLogo","logo","alt","HeaderMiddle","HeaderUser","authUser","login","Header","Init","tip","authAPI","password","delete","authorize","signIn","signUp","signOut","_","authSlice","isAuthorizing","authError","isSigningIn","signingInError","isSigningUp","signingUpError","isSigningOut","signingOutError","signingInErrorChanged","signingUpErrorChanged","signingOutErrorChanged","InitError","NotFound","Settings","auth","values","department","value","group","htmlType","useRedirectFromAuth","authId","SignIn","Password","Option","Select","SignUp","setStatus","min","init","Promise","all","appSlice","isInit","isIniting","initChanged","PrivateRoute","App","app","initError","path","element","index","store","configureStore","reducer","authReducer","userReducer","channelReducer","postReducer","appReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c406206a.chunk.js","sourcesContent":["import { ActionCreatorWithPayload } from '@reduxjs/toolkit';\r\nimport { UploadRequestOption } from 'rc-upload/lib/interface';\r\nimport { UploadFile } from 'antd/lib/upload/interface';\r\nimport { UploadChangeParam, RcFile } from 'antd/lib/upload';\r\nimport { useState, useEffect } from 'react';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\nimport { message } from 'antd';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const useImageUpload = (url: any) => {\r\n  const [img, setImg] = useState(url);\r\n\r\n  const handleChange = (info: UploadChangeParam<UploadFile<any>>) => {\r\n    if (info.file.status === 'done') {\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImg(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const dummyRequest = ({ onSuccess }: UploadRequestOption<any>) => {\r\n    setTimeout(() => {\r\n      if (onSuccess) {\r\n        onSuccess('ok');\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  const getBase64 = (\r\n    img: RcFile | undefined,\r\n    callback: (url: string | null) => void\r\n  ) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () =>\r\n      callback(reader.result as string | null)\r\n    );\r\n    reader.readAsDataURL(img as Blob);\r\n  };\r\n\r\n  const beforeUpload = (file: File) => {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('Будь ласка, завантажте JPG або PNG файл!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Зображення має важити не більше 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  };\r\n\r\n  return {\r\n    img,\r\n    setImg,\r\n    handleChange,\r\n    beforeUpload,\r\n    dummyRequest,\r\n  };\r\n};\r\n\r\nexport const useErrorMessage = (\r\n  error: string | null,\r\n  removeAction?: ActionCreatorWithPayload<null | string>\r\n) => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    if (error) {\r\n      message.error(error);\r\n      if (removeAction) {\r\n        dispatch(removeAction(null));\r\n      }\r\n    }\r\n  }, [error, dispatch, removeAction]);\r\n};\r\n\r\nexport const useSuccessMessage = (\r\n  msg: string,\r\n  isSucceed: boolean,\r\n  removeAction?: ActionCreatorWithPayload<null | string>\r\n) => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    if (isSucceed) {\r\n      message.success(msg);\r\n      if (removeAction) {\r\n        dispatch(removeAction(null));\r\n      }\r\n    }\r\n  }, [isSucceed, dispatch, removeAction, msg]);\r\n};\r\n\r\nexport const useLoading = (msg: string, isLoading: boolean) => {\r\n  useEffect(() => {\r\n    let hide = () => {};\r\n    if (isLoading) {\r\n      hide = message.loading(msg);\r\n    } else {\r\n      hide();\r\n    }\r\n  }, [isLoading, msg]);\r\n};\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AsideChannelsItem: React.FC<Props> = ({ children }) => {\r\n  return (\r\n    <div className=\"w-18 flex justify-center items-center p-2\">{children}</div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Avatar, Tooltip } from 'antd';\r\nimport { AsideChannelsItem } from './AsideChannelsItem';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ChannelPreview } from '../../app/types';\r\n\r\ninterface Props {\r\n  channel: ChannelPreview;\r\n}\r\n\r\nexport const AsideChannel: React.FC<Props> = ({ channel }) => {\r\n  return (\r\n    <NavLink\r\n      to={`channel/${channel.id}`}\r\n      className={({ isActive }) => (isActive ? 'bg-blue-100 rounded-lg' : '')}\r\n    >\r\n      <AsideChannelsItem>\r\n        <Tooltip title={channel.name} placement=\"right\">\r\n          <Avatar size={48} src={channel.photo}>\r\n            {channel.name[0].toUpperCase()}\r\n          </Avatar>\r\n        </Tooltip>\r\n      </AsideChannelsItem>\r\n    </NavLink>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const template = axios.create({\r\n  baseURL: 'https://kpi-network.herokuapp.com/api/',\r\n  withCredentials: true,\r\n});\r\n","import { template } from '../../app/api';\r\nimport {\r\n  Response,\r\n  Channel,\r\n  WithId,\r\n  WithPhoto,\r\n  ChannelCreatedData,\r\n  ItemsResponse,\r\n  Post,\r\n} from './../../app/types';\r\n\r\nexport const channelAPI = {\r\n  get: (id: number) => {\r\n    return template.get<Response<Channel & WithId & WithPhoto>>(\r\n      `channel/${id}`\r\n    );\r\n  },\r\n\r\n  create: (channel: Channel & WithPhoto) => {\r\n    return template.post<Response<ChannelCreatedData>>('channel', {\r\n      ...channel,\r\n    });\r\n  },\r\n\r\n  update: (channel: Channel & WithId & WithPhoto) => {\r\n    return template.put<Response<Channel & WithId & WithPhoto>>(\r\n      `channel/${channel.id}`,\r\n      { ...channel }\r\n    );\r\n  },\r\n\r\n  getPosts: ({\r\n    id,\r\n    page,\r\n    count,\r\n  }: {\r\n    id: number;\r\n    page: number;\r\n    count: number;\r\n  }) => {\r\n    return template.get<ItemsResponse<(Post & WithId)[]>>(\r\n      `channel/${id}/posts?page=${page}&count=${count}`\r\n    );\r\n  },\r\n};\r\n","import { template } from './../../app/api';\r\nimport { SettingsFormValues } from './../../components/Settings';\r\nimport {\r\n  Response,\r\n  WithPhoto,\r\n  User,\r\n  WithId,\r\n  ItemsResponse,\r\n  ChannelPreview,\r\n} from './../../app/types';\r\n\r\nexport const userAPI = {\r\n  get: (id: number) => {\r\n    return template.get<Response<User & WithId & WithPhoto>>(`user/${id}`);\r\n  },\r\n\r\n  update: (userData: SettingsFormValues & WithPhoto) => {\r\n    return template.put<Response<{}>>('user', {\r\n      ...userData,\r\n    });\r\n  },\r\n\r\n  getChannels: (page: number, count: number) => {\r\n    return template.get<ItemsResponse<ChannelPreview[]>>(\r\n      `/user/channels?page=${page}&count=${count}`\r\n    );\r\n  },\r\n};\r\n","import { AxiosError } from 'axios';\r\nimport { SettingsFormValues } from './../../components/Settings';\r\nimport { userAPI } from './userAPI';\r\nimport {\r\n  User,\r\n  ChannelPreview,\r\n  WithId,\r\n  WithPhoto,\r\n  Response,\r\n  ItemsResponse,\r\n} from './../../app/types';\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface UserState {\r\n  user: (User & WithId & WithPhoto) | null;\r\n  isFetching: boolean;\r\n  fetchingError: string | null;\r\n\r\n  isUpdating: boolean;\r\n  updateSucceed: boolean;\r\n  updatingError: string | null;\r\n\r\n  channels: ChannelPreview[];\r\n  count: number;\r\n  lastPortion: number;\r\n  total: number | null;\r\n\r\n  isChannelsFetching: boolean;\r\n  channelsFetchingError: string | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  isFetching: false,\r\n  fetchingError: null,\r\n\r\n  isUpdating: false,\r\n  updateSucceed: false,\r\n  updatingError: null,\r\n\r\n  channels: [],\r\n  count: 10,\r\n  lastPortion: 0,\r\n  total: null,\r\n  isChannelsFetching: false,\r\n  channelsFetchingError: null,\r\n};\r\n\r\nexport const fetchUser = createAsyncThunk<\r\n  Response<User & WithId & WithPhoto>,\r\n  number,\r\n  {\r\n    rejectValue: string;\r\n  }\r\n>('user/fetched', async (id: number, { rejectWithValue }) => {\r\n  try {\r\n    const response = await userAPI.get(id);\r\n    if (response.data.errors[0]) {\r\n      return rejectWithValue(response.data.errors[0]);\r\n    }\r\n\r\n    return response.data;\r\n  } catch (e) {\r\n    const error = e as AxiosError;\r\n    if (error.response && error.response.status === 401) {\r\n      return rejectWithValue(error.response.data.errors[0]);\r\n    }\r\n    return rejectWithValue(error.response?.statusText ?? 'Some error occured');\r\n  }\r\n});\r\n\r\nexport const updateUser = createAsyncThunk<\r\n  User & WithPhoto & WithId,\r\n  SettingsFormValues & WithPhoto,\r\n  {\r\n    rejectValue: string;\r\n  }\r\n>(\r\n  'user/updated',\r\n  async (\r\n    userData: SettingsFormValues & WithPhoto,\r\n    { rejectWithValue, getState }\r\n  ) => {\r\n    const state = getState() as { user: UserState };\r\n\r\n    try {\r\n      const response = await userAPI.update(userData);\r\n      if (response.data.errors[0]) {\r\n        return rejectWithValue(response.data.errors[0]);\r\n      }\r\n\r\n      return {\r\n        ...state.user.user,\r\n        ...userData,\r\n      } as User & WithPhoto & WithId;\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      if (error.response && error.response.status === 401) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      }\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchUserChannels = createAsyncThunk<\r\n  ItemsResponse<ChannelPreview[]>,\r\n  { portion: number; count: number },\r\n  {\r\n    rejectValue: string;\r\n  }\r\n>(\r\n  'user/channels_fetched',\r\n  async (\r\n    { portion, count }: { portion: number; count: number },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const response = await userAPI.getChannels(portion, count);\r\n      if (response.data.errors[0]) {\r\n        return rejectWithValue(response.data.errors[0]);\r\n      }\r\n\r\n      return response.data;\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      if (error.response && error.response.status === 401) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      }\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    addChannel: (state, action) => {\r\n      state.channels.push(action.payload);\r\n    },\r\n\r\n    userChanged: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    userChannelsChanged: (state, action) => {\r\n      state.channels = action.payload;\r\n    },\r\n\r\n    channelsFetchingErrorChanged: (state, action) => {\r\n      state.channelsFetchingError = action.payload;\r\n    },\r\n\r\n    updateSucceedChanged: (state, action) => {\r\n      state.updateSucceed = action.payload;\r\n    },\r\n\r\n    updatingErrorChanged: (state, action) => {\r\n      state.updatingError = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUser.pending, (state) => {\r\n        state.isFetching = true;\r\n      })\r\n      .addCase(fetchUser.fulfilled, (state, action) => {\r\n        state.isFetching = false;\r\n        state.user = action.payload.data;\r\n      })\r\n      .addCase(fetchUser.rejected, (state, action) => {\r\n        state.fetchingError = action.payload ?? null;\r\n        state.isFetching = false;\r\n      })\r\n\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.isUpdating = true;\r\n      })\r\n      .addCase(updateUser.fulfilled, (state, action) => {\r\n        state.isUpdating = false;\r\n        state.updateSucceed = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateUser.rejected, (state, action) => {\r\n        state.updatingError = action.payload ?? null;\r\n        state.isUpdating = false;\r\n      })\r\n\r\n      .addCase(fetchUserChannels.pending, (state) => {\r\n        state.isChannelsFetching = true;\r\n      })\r\n      .addCase(fetchUserChannels.fulfilled, (state, action) => {\r\n        state.isChannelsFetching = false;\r\n        state.channels = [...state.channels, ...action.payload.data.items];\r\n        state.lastPortion += 1;\r\n\r\n        state.total = action.payload.data.total;\r\n      })\r\n      .addCase(fetchUserChannels.rejected, (state, action) => {\r\n        state.channelsFetchingError = action.payload ?? null;\r\n        state.isChannelsFetching = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  addChannel,\r\n  userChanged,\r\n  userChannelsChanged,\r\n  updateSucceedChanged,\r\n  updatingErrorChanged,\r\n  channelsFetchingErrorChanged,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import {\r\n  Channel,\r\n  ChannelCreatedData,\r\n  ItemsResponse,\r\n  Post,\r\n  Response,\r\n  WithId,\r\n  WithPhoto,\r\n} from './../../app/types';\r\nimport { channelAPI } from './channelAPI';\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { addChannel } from '../user/userSlice';\r\nimport { AxiosError } from 'axios';\r\n\r\nexport interface ChannelState {\r\n  channel: (Channel & WithId & WithPhoto) | null;\r\n\r\n  posts: (Post & WithId)[] | null;\r\n  totalPosts: number | null;\r\n  count: number;\r\n  lastPortion: number;\r\n  isPostFetching: boolean;\r\n  postFetchingError: string | null;\r\n\r\n  isCreatorOpened: boolean;\r\n  isCreating: boolean;\r\n  creationError: null | string;\r\n  createdSucceed: boolean;\r\n\r\n  isEditorOpened: boolean;\r\n  isEditing: boolean;\r\n  editingError: null | string;\r\n  editedSucceed: boolean;\r\n\r\n  isFetching: boolean;\r\n  fetchingError: string | null;\r\n}\r\n\r\nconst initialState: ChannelState = {\r\n  channel: null,\r\n\r\n  posts: null,\r\n  totalPosts: null,\r\n  count: 10,\r\n  lastPortion: 0,\r\n  isPostFetching: false,\r\n  postFetchingError: null,\r\n\r\n  isCreatorOpened: false,\r\n  isCreating: false,\r\n  creationError: null,\r\n  createdSucceed: false,\r\n\r\n  isEditorOpened: false,\r\n  isEditing: false,\r\n  editingError: null,\r\n  editedSucceed: false,\r\n\r\n  isFetching: false,\r\n  fetchingError: null,\r\n};\r\n\r\nexport const fetchChannel = createAsyncThunk<\r\n  Response<Channel & WithId & WithPhoto>,\r\n  number,\r\n  { rejectValue: string }\r\n>(\r\n  'channel/fetched',\r\n  async (id: number, { rejectWithValue, dispatch, getState }) => {\r\n    const state = getState() as { channel: ChannelState };\r\n    try {\r\n      const response = await channelAPI.get(id);\r\n      if (response.data.errors[0]) {\r\n        return rejectWithValue(response.data.errors[0]);\r\n      }\r\n\r\n      dispatch(\r\n        fetchPosts({\r\n          id,\r\n          page: state.channel.lastPortion + 1,\r\n          count: state.channel.count,\r\n        })\r\n      );\r\n\r\n      return response.data;\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      if (error.response && error.response.status === 404) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      }\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const createChannel = createAsyncThunk<\r\n  Response<ChannelCreatedData>,\r\n  Channel & WithPhoto,\r\n  { rejectValue: string }\r\n>(\r\n  'channel/created',\r\n  async (channel: Channel & WithPhoto, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      const response = await channelAPI.create(channel);\r\n\r\n      if (response.data.errors[0]) {\r\n        return rejectWithValue(response.data.errors[0]);\r\n      }\r\n\r\n      if (response.data.data.id) {\r\n        dispatch(\r\n          addChannel({\r\n            id: response.data.data.id,\r\n            ...channel,\r\n          })\r\n        );\r\n        dispatch(creatorClosed());\r\n      }\r\n\r\n      return response.data;\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      if (error.response && error.response.status === 401) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      }\r\n\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const editChannel = createAsyncThunk<\r\n  Channel & WithId & WithPhoto,\r\n  Channel & WithId & WithPhoto,\r\n  { rejectValue: string }\r\n>(\r\n  'channel/edited',\r\n  async (\r\n    channel: Channel & WithId & WithPhoto,\r\n    { dispatch, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const response = await channelAPI.update(channel);\r\n\r\n      if (response.data.errors[0]) {\r\n        return rejectWithValue(response.data.errors[0]);\r\n      }\r\n      dispatch(editorClosed());\r\n\r\n      return channel;\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      if (error.response && error.response.status === 401) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      }\r\n\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchPosts = createAsyncThunk<\r\n  ItemsResponse<(Post & WithId)[]>,\r\n  {\r\n    id: number;\r\n    page: number;\r\n    count: number;\r\n  },\r\n  { rejectValue: string }\r\n>('channel/postsFetched', async ({ id, page, count }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await channelAPI.getPosts({ id, page, count });\r\n\r\n    if (response.data.errors[0]) {\r\n      return rejectWithValue(response.data.errors[0]);\r\n    }\r\n\r\n    return response.data;\r\n  } catch (e) {\r\n    const error = e as AxiosError;\r\n\r\n    return rejectWithValue(error.response?.statusText ?? 'Some error occured');\r\n  }\r\n});\r\n\r\nconst channelSlice = createSlice({\r\n  name: 'channel',\r\n  initialState,\r\n  reducers: {\r\n    creatorOpened: (state) => {\r\n      state.isCreatorOpened = true;\r\n    },\r\n\r\n    creatorClosed: (state) => {\r\n      state.isCreatorOpened = false;\r\n    },\r\n\r\n    editorOpened: (state) => {\r\n      state.isEditorOpened = true;\r\n    },\r\n\r\n    editorClosed: (state) => {\r\n      state.isEditorOpened = false;\r\n    },\r\n\r\n    creationErrorChanged: (state, action) => {\r\n      state.creationError = action.payload;\r\n    },\r\n\r\n    createdSucceedChanged: (state, action) => {\r\n      state.createdSucceed = action.payload;\r\n    },\r\n\r\n    editedSucceedChanged: (state, action) => {\r\n      state.editedSucceed = action.payload;\r\n    },\r\n\r\n    postsChanged: (state, action) => {\r\n      state.posts = action.payload;\r\n    },\r\n\r\n    postAdded: (state, action) => {\r\n      if (state.posts) {\r\n        state.posts.push(action.payload);\r\n      } else {\r\n        state.posts = [action.payload];\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchChannel.pending, (state) => {\r\n        state.isFetching = true;\r\n      })\r\n      .addCase(fetchChannel.fulfilled, (state, action) => {\r\n        state.isFetching = false;\r\n        state.channel = action.payload.data;\r\n        state.fetchingError = null;\r\n      })\r\n      .addCase(fetchChannel.rejected, (state, action) => {\r\n        state.channel = null;\r\n        state.isFetching = false;\r\n        state.fetchingError = action.payload ?? null;\r\n      })\r\n\r\n      .addCase(createChannel.pending, (state) => {\r\n        state.isCreating = true;\r\n      })\r\n      .addCase(createChannel.fulfilled, (state) => {\r\n        state.isCreating = false;\r\n        state.createdSucceed = true;\r\n      })\r\n      .addCase(createChannel.rejected, (state, action) => {\r\n        state.isCreating = false;\r\n        state.creationError = action.payload ?? null;\r\n      })\r\n\r\n      .addCase(editChannel.pending, (state) => {\r\n        state.isEditing = true;\r\n      })\r\n      .addCase(editChannel.fulfilled, (state, action) => {\r\n        state.isEditing = false;\r\n        state.channel = action.payload;\r\n      })\r\n      .addCase(editChannel.rejected, (state, action) => {\r\n        state.isEditing = false;\r\n        state.editingError = action.payload ?? null;\r\n      })\r\n\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.isPostFetching = true;\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.isPostFetching = false;\r\n        if (!state.posts) {\r\n          state.posts = action.payload.data.items;\r\n        } else {\r\n          state.posts = [...state.posts, ...action.payload.data.items];\r\n        }\r\n        state.lastPortion += 1;\r\n        state.totalPosts = action.payload.data.total;\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.isPostFetching = false;\r\n        state.editingError = action.payload ?? null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  creatorOpened,\r\n  creatorClosed,\r\n  editorOpened,\r\n  editorClosed,\r\n  creationErrorChanged,\r\n  createdSucceedChanged,\r\n  editedSucceedChanged,\r\n  postsChanged,\r\n  postAdded,\r\n} = channelSlice.actions;\r\n\r\nexport default channelSlice.reducer;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { AsideChannelsItem } from './AsideChannelsItem';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport { creatorOpened } from '../../features/channel/channelSlice';\r\n\r\nexport const AsideButton: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const openForm = () => {\r\n    dispatch(creatorOpened());\r\n  };\r\n\r\n  return (\r\n    <AsideChannelsItem>\r\n      <Button\r\n        icon={<PlusOutlined className=\"text-2xl\" />}\r\n        shape=\"circle\"\r\n        className=\"w-12 h-12\"\r\n        onClick={openForm}\r\n      />\r\n    </AsideChannelsItem>\r\n  );\r\n};\r\n","import React, { UIEvent } from 'react';\r\n\r\nimport { AsideChannel } from './AsideChannel';\r\nimport { AsideButton } from './AsideButton';\r\nimport {\r\n  useAppDispatch,\r\n  useAppSelector,\r\n  useErrorMessage,\r\n  useLoading,\r\n} from '../../app/hooks';\r\nimport {\r\n  channelsFetchingErrorChanged,\r\n  fetchUserChannels,\r\n} from '../../features/user/userSlice';\r\n\r\nexport const AsideChannels: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const channels = useAppSelector((state) => state.user.channels);\r\n  const total = useAppSelector((state) => state.user.total);\r\n  const count = useAppSelector((state) => state.user.count);\r\n  const isFetching = useAppSelector((state) => state.user.isChannelsFetching);\r\n  const error = useAppSelector((state) => state.user.channelsFetchingError);\r\n\r\n  useErrorMessage(error, channelsFetchingErrorChanged);\r\n  useLoading('Завантження каналів...', isFetching);\r\n\r\n  const lastPortion = useAppSelector((state) => state.user.lastPortion);\r\n\r\n  const scrollHandler = (e: UIEvent<HTMLElement>) => {\r\n    if (!isFetching && (total === null || lastPortion * count < total)) {\r\n      const scrollHeight = e.currentTarget.scrollHeight;\r\n      const clientHeight = e.currentTarget.clientHeight;\r\n\r\n      const top = e.currentTarget.scrollTop;\r\n      let bottom = scrollHeight - top - clientHeight;\r\n      if (bottom < 30) {\r\n        dispatch(fetchUserChannels({ portion: lastPortion + 1, count }));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <aside\r\n      className=\"flex flex-col items-center bg-gray-100 overflow-y-scroll\"\r\n      onScroll={scrollHandler}\r\n    >\r\n      <AsideButton />\r\n\r\n      {channels\r\n        .map((channel) => <AsideChannel key={channel.id} channel={channel} />)\r\n        .reverse()}\r\n    </aside>\r\n  );\r\n};\r\n","import { Avatar, List, ConfigProvider, Empty } from 'antd';\r\nimport React from 'react';\r\nimport { Link, NavLink, useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst data: { id: number; title: string }[] = [\r\n  // {\r\n  //   id: 1,\r\n  //   title: 'me',\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   title: 'me',\r\n  // },\r\n  // {\r\n  //   id: 3,\r\n  //   title: 'me',\r\n  // },\r\n  // {\r\n  //   id: 4,\r\n  //   title: 'me',\r\n  // },\r\n  // {\r\n  //   id: 5,\r\n  //   title: 'me',\r\n  // },\r\n];\r\n\r\nexport const AsideContacts: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const userId = params.userId;\r\n\r\n  return (\r\n    <aside className=\"flex-none w-56 border-l-2 p-2\">\r\n      <ConfigProvider\r\n        renderEmpty={() => (\r\n          <Empty\r\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            description=\"Ви поки що не маєте контактів\"\r\n          />\r\n        )}\r\n      >\r\n        <List\r\n          className={`w-full h-full ${!data.length && 'flex items-center'}`}\r\n          itemLayout=\"horizontal\"\r\n          dataSource={data}\r\n          renderItem={(item) => (\r\n            <List.Item\r\n              className={\r\n                userId && +userId === item.id\r\n                  ? 'bg-blue-100 rounded-md cursor-pointer'\r\n                  : 'cursor-pointer'\r\n              }\r\n              onClick={() => navigate(`chat/${item.id}`)}\r\n            >\r\n              <List.Item.Meta\r\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                title={item.title}\r\n                description={\r\n                  <p className=\"truncate\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Dolorem doloribus non vel voluptatem aspernatur soluta esse\r\n                    impedit, doloremque sequi quae nihil, quod excepturi magni\r\n                    aut fuga aperiam quaerat temporibus debitis?\r\n                  </p>\r\n                }\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </ConfigProvider>\r\n    </aside>\r\n  );\r\n};\r\n","import { Modal, Form, Input, Upload, Avatar } from 'antd';\r\nimport { MessageOutlined } from '@ant-design/icons';\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n  useAppDispatch,\r\n  useAppSelector,\r\n  useImageUpload,\r\n  useErrorMessage,\r\n  useSuccessMessage,\r\n} from '../../app/hooks';\r\nimport {\r\n  createChannel,\r\n  creatorClosed,\r\n  creationErrorChanged,\r\n  createdSucceedChanged,\r\n} from '../../features/channel/channelSlice';\r\nimport { Channel } from '../../app/types';\r\n\r\nexport const CreateChannelForm: React.FC = () => {\r\n  const isOpened = useAppSelector((state) => state.channel.isCreatorOpened);\r\n  const isLoading = useAppSelector((state) => state.channel.isCreating);\r\n  const succeed = useAppSelector((state) => state.channel.createdSucceed);\r\n  const error = useAppSelector((state) => state.channel.creationError);\r\n\r\n  const { img, setImg, dummyRequest, beforeUpload, handleChange } =\r\n    useImageUpload(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useErrorMessage(error, creationErrorChanged);\r\n  useSuccessMessage('Канал створено', succeed, createdSucceedChanged);\r\n\r\n  useEffect(() => {\r\n    if (isOpened) {\r\n      form.resetFields();\r\n      setImg(null);\r\n    }\r\n  }, [form, isOpened, setImg]);\r\n\r\n  const close = () => {\r\n    dispatch(creatorClosed());\r\n  };\r\n\r\n  const okHandler = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const submitHandler = (formData: Channel) => {\r\n    console.log(formData);\r\n\r\n    dispatch(createChannel({ ...formData, photo: img }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Створіть свій канал\"\r\n      centered\r\n      visible={isOpened}\r\n      onOk={okHandler}\r\n      onCancel={close}\r\n      okButtonProps={{ loading: isLoading }}\r\n      cancelButtonProps={{ disabled: isLoading }}\r\n      width={800}\r\n    >\r\n      <div className=\"flex gap-5\">\r\n        <Upload\r\n          name=\"channel\"\r\n          showUploadList={false}\r\n          beforeUpload={beforeUpload}\r\n          customRequest={dummyRequest}\r\n          onChange={handleChange}\r\n        >\r\n          <Avatar\r\n            size={200}\r\n            shape=\"square\"\r\n            src={img}\r\n            icon={<MessageOutlined />}\r\n          />\r\n        </Upload>\r\n        <Form\r\n          form={form}\r\n          name=\"createChannel\"\r\n          onFinish={submitHandler}\r\n          className=\"flex-grow\"\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Будь ласка, введіть назву каналу',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Назва каналу\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"description\" initialValue={null}>\r\n            <Input placeholder=\"Опис каналу (не обов'язково)\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Modal, Form, Input, Upload, Avatar } from 'antd';\r\nimport { MessageOutlined } from '@ant-design/icons';\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n  useAppDispatch,\r\n  useAppSelector,\r\n  useErrorMessage,\r\n  useImageUpload,\r\n  useSuccessMessage,\r\n} from '../../app/hooks';\r\nimport {\r\n  editChannel,\r\n  editedSucceedChanged,\r\n  editorClosed,\r\n} from '../../features/channel/channelSlice';\r\nimport { Channel } from '../../app/types';\r\n\r\nexport const EditChannelForm: React.FC = () => {\r\n  const channel = useAppSelector((state) => state.channel.channel);\r\n  const isOpened = useAppSelector((state) => state.channel.isEditorOpened);\r\n  const isLoading = useAppSelector((state) => state.channel.isEditing);\r\n  const error = useAppSelector((state) => state.channel.editingError);\r\n  const succeed = useAppSelector((state) => state.channel.editedSucceed);\r\n\r\n  const { img, setImg, dummyRequest, beforeUpload, handleChange } =\r\n    useImageUpload(channel ? channel.photo : null);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useErrorMessage(error, editedSucceedChanged);\r\n  useSuccessMessage('Інформацію змінено', succeed, editedSucceedChanged);\r\n\r\n  useEffect(() => {\r\n    if (isOpened) {\r\n      form.resetFields();\r\n      setImg(channel ? channel.photo : null);\r\n    }\r\n  }, [isOpened, form, setImg, channel]);\r\n\r\n  const close = () => {\r\n    dispatch(editorClosed());\r\n  };\r\n\r\n  const okHandler = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const submitHandler = (formData: Channel) => {\r\n    console.log(formData);\r\n\r\n    if (channel) {\r\n      dispatch(\r\n        editChannel({\r\n          ...channel,\r\n          ...formData,\r\n          photo: img,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Налаштування каналу\"\r\n      centered\r\n      visible={isOpened}\r\n      onOk={okHandler}\r\n      onCancel={close}\r\n      okButtonProps={{ loading: isLoading }}\r\n      cancelButtonProps={{ disabled: isLoading }}\r\n      width={800}\r\n    >\r\n      <div className=\"flex gap-5\">\r\n        <Upload\r\n          name=\"channel\"\r\n          showUploadList={false}\r\n          beforeUpload={beforeUpload}\r\n          customRequest={dummyRequest}\r\n          onChange={handleChange}\r\n        >\r\n          <Avatar\r\n            size={200}\r\n            shape=\"square\"\r\n            src={img}\r\n            icon={<MessageOutlined />}\r\n          />\r\n        </Upload>\r\n        <Form\r\n          form={form}\r\n          name=\"editChannel\"\r\n          onFinish={submitHandler}\r\n          className=\"flex-grow\"\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            initialValue={channel ? channel.name : ''}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Будь ласка, введіть назву каналу',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Назва каналу\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"description\"\r\n            initialValue={channel ? channel.description : ''}\r\n          >\r\n            <Input placeholder=\"Опис каналу (не обов'язково)\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { AsideChannels } from './AsideChannels/AsideChannels';\r\nimport { AsideContacts } from './AsideContacts/AsideContacts';\r\nimport { Outlet } from 'react-router';\r\nimport { CreateChannelForm } from './Channel/CreateChannelForm';\r\nimport { EditChannelForm } from './Channel/EditChannelForm';\r\n\r\nexport const Body: React.FC = () => {\r\n  return (\r\n    <>\r\n      <AsideChannels />\r\n      <main className=\"flex justify-center items-center flex-grow bg-white p-6\">\r\n        <CreateChannelForm />\r\n        <EditChannelForm />\r\n        <Outlet />\r\n      </main>\r\n      <AsideContacts />\r\n    </>\r\n  );\r\n};\r\n","import { Avatar, ConfigProvider, Empty } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport { List } from 'antd';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\n\r\nexport const Display: React.FC = () => {\r\n  const posts = useAppSelector((state) => state.channel.posts);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      renderEmpty={() => (\r\n        <Empty\r\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          description={\r\n            <span>\r\n              Канал наразі порожній.\r\n              <br /> Напишіть першим!\r\n            </span>\r\n          }\r\n        />\r\n      )}\r\n    >\r\n      <List\r\n        className={`flex-grow overflow-y-scroll ${\r\n          !posts?.length && 'flex justify-center items-center'\r\n        }`}\r\n        dataSource={posts ?? undefined}\r\n        renderItem={(item) => (\r\n          <List.Item key={item.id} className=\"bg-white rounded-sm mb-2\">\r\n            <List.Item.Meta\r\n              avatar={\r\n                <Avatar\r\n                  size=\"large\"\r\n                  icon={<UserOutlined />}\r\n                  src={item.author.photo}\r\n                />\r\n              }\r\n              title={item.author.name}\r\n              description={item.text}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","import { PostCreatedData } from './../../app/types';\r\nimport { template } from '../../app/api';\r\n\r\nimport { Response, ItemsResponse, Post, WithId } from '../../app/types';\r\n\r\nexport const postAPI = {\r\n  create: (post: Omit<Post, 'author'>) => {\r\n    return template.post<Response<PostCreatedData>>('posts', { ...post });\r\n  },\r\n};\r\n","import { PostCreatedData, Response } from './../../app/types';\r\nimport { AxiosError } from 'axios';\r\nimport { WithId } from '../../app/types';\r\nimport { postAPI } from './postAPI';\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { Post } from '../../app/types';\r\nimport { ChannelState, postAdded } from '../channel/channelSlice';\r\nimport { UserState } from '../user/userSlice';\r\n\r\nexport interface PostsState {\r\n  post: (Post & WithId)[] | null;\r\n  total: number | null;\r\n\r\n  isFetching: boolean;\r\n  isSending: boolean;\r\n  sendingError: string | null;\r\n\r\n  fetchingError: string | null;\r\n}\r\n\r\nconst initialState: PostsState = {\r\n  post: null,\r\n  total: null,\r\n\r\n  isSending: false,\r\n  sendingError: null,\r\n\r\n  isFetching: false,\r\n  fetchingError: null,\r\n};\r\n\r\nexport const sendPost = createAsyncThunk<Response<PostCreatedData>, string>(\r\n  'post/sended',\r\n  async (text: string, { getState, dispatch, rejectWithValue }) => {\r\n    const state = getState() as { channel: ChannelState; user: UserState };\r\n    const channelId = state.channel.channel?.id;\r\n    const user = state.user.user;\r\n\r\n    try {\r\n      if (channelId) {\r\n        const post = {\r\n          text,\r\n          channelId,\r\n        };\r\n        const response = await postAPI.create(post);\r\n\r\n        dispatch(\r\n          postAdded({ id: response.data.data.id, ...post, author: user })\r\n        );\r\n        return response.data;\r\n      }\r\n\r\n      return rejectWithValue('There is no channel id provided');\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n\r\n      const statuses = [401, 404];\r\n\r\n      if (error.response?.status && statuses.includes(error.response.status)) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      } else {\r\n        return rejectWithValue(\r\n          error.response?.statusText ?? 'Some error occured'\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n\r\n  reducers: {},\r\n\r\n  extraReducers: (builder) =>\r\n    builder\r\n      .addCase(sendPost.pending, (state) => {\r\n        state.isSending = true;\r\n        state.sendingError = null;\r\n      })\r\n      .addCase(sendPost.fulfilled, (state) => {\r\n        state.isSending = false;\r\n      })\r\n      .addCase(sendPost.rejected, (state, action) => {\r\n        state.isSending = false;\r\n        state.sendingError = action.error.message ?? null;\r\n      }),\r\n});\r\n\r\nexport default postSlice.reducer;\r\n","import { Form, Input, Spin } from 'antd';\r\nimport Text from 'antd/lib/typography/Text';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { fetchChannel } from '../../features/channel/channelSlice';\r\nimport { sendPost } from '../../features/post/postSlice';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface FormData {\r\n  text: string;\r\n}\r\n\r\nexport const Field: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [form] = Form.useForm();\r\n\r\n  const pressHandler = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (!e.shiftKey) {\r\n      e.preventDefault();\r\n      form.submit();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (data: FormData) => {\r\n    form.resetFields();\r\n    if (data.text.trim()) {\r\n      dispatch(sendPost(data.text));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <Form name=\"post\" form={form} onFinish={handleSubmit}>\r\n        <Form.Item name=\"text\" noStyle>\r\n          <TextArea\r\n            autoFocus\r\n            placeholder=\"Enter your message here...\"\r\n            autoSize={{\r\n              maxRows: 6,\r\n              minRows: 1,\r\n            }}\r\n            onPressEnter={pressHandler}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Card, Result, Spin, Typography } from 'antd';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport {\r\n  editorOpened,\r\n  fetchChannel,\r\n  postsChanged,\r\n} from '../../features/channel/channelSlice';\r\nimport { Display } from './Display';\r\nimport { Field } from './Field';\r\n\r\nexport const Channel: React.FC = () => {\r\n  const channel = useAppSelector((state) => state.channel.channel);\r\n  const isFetching = useAppSelector((state) => state.channel.isFetching);\r\n  const fetchingError = useAppSelector((state) => state.channel.fetchingError);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      params.channelId &&\r\n      (channel === null || +params.channelId !== channel.id)\r\n    ) {\r\n      dispatch(postsChanged(null));\r\n      dispatch(fetchChannel(+params.channelId));\r\n    }\r\n  }, [params.channelId, channel, dispatch]);\r\n\r\n  const openEditor = () => {\r\n    dispatch(editorOpened());\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    if (params.channelId) {\r\n      dispatch(fetchChannel(+params.channelId));\r\n    }\r\n  };\r\n\r\n  if (channel && !fetchingError && !isFetching)\r\n    return (\r\n      <Card\r\n        title={channel.name}\r\n        extra={<Typography.Link onClick={openEditor}>Edit</Typography.Link>}\r\n        className=\"w-full h-full flex flex-col\"\r\n        bodyStyle={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          overflowY: 'hidden',\r\n          height: '100%',\r\n        }}\r\n      >\r\n        <Display />\r\n        <Field />\r\n      </Card>\r\n    );\r\n\r\n  return (\r\n    <Card\r\n      className=\"w-full h-full flex flex-col\"\r\n      bodyStyle={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        overflowY: 'hidden',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      {isFetching && !fetchingError && <Spin />}\r\n      {fetchingError && (\r\n        <Result\r\n          status=\"warning\"\r\n          title=\"Виникла помилка під час завантаження каналу\"\r\n          subTitle={fetchingError}\r\n          extra={\r\n            <Button type=\"primary\" onClick={clickHandler} loading={isFetching}>\r\n              Спробувати ще раз\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n","import { Button, Empty } from 'antd';\r\n\r\nimport { Typography } from 'antd';\r\n\r\nimport React from 'react';\r\nimport { useAppDispatch } from '../app/hooks';\r\nimport { creatorOpened } from '../features/channel/channelSlice';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport const EmptyMain: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const openForm = () => {\r\n    dispatch(creatorOpened());\r\n  };\r\n\r\n  return (\r\n    <Empty\r\n      className=\"\"\r\n      description={\r\n        <div>\r\n          <Paragraph strong>Почніть свою роботу зі створеня каналу</Paragraph>\r\n          <Button type=\"primary\" onClick={openForm}>\r\n            Створити канал\r\n          </Button>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.da23b606.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/logo.png';\r\n\r\nexport const HeaderLogo: React.FC = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center flex-none w-18 p-1\">\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"kpi logo\" className=\"w-14\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const HeaderMiddle: React.FC = () => {\r\n  return <div className=\"flex-grow p-1\"></div>;\r\n};\r\n","import React from 'react';\r\n\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nimport Text from 'antd/lib/typography/Text';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeaderUser: React.FC = () => {\r\n  const authUser = useAppSelector((state) => state.user.user);\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-2 flex-none w-56 py-1 pl-1 pr-4\">\r\n      {authUser && (\r\n        <Link to=\"/settings\">\r\n          <div className=\"flex flex-grow items-center gap-2 overflow-hidden group\">\r\n            <Avatar\r\n              size={48}\r\n              icon={<UserOutlined />}\r\n              src={authUser.photo}\r\n              className=\"flex-none\"\r\n            />\r\n            <Text\r\n              strong\r\n              className=\"text-base truncate group-hover:text-blue-400\"\r\n            >\r\n              {authUser.login}\r\n            </Text>\r\n          </div>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { HeaderLogo } from './HeaderLogo';\r\nimport { HeaderMiddle } from './HeaderMiddle';\r\nimport { HeaderUser } from './HeaderUser';\r\n\r\nexport const Header: React.FC = () => {\r\n  return (\r\n    <header className=\"flex items-center border-b-2 bg-gray-100\">\r\n      <HeaderLogo />\r\n      <HeaderMiddle />\r\n      <HeaderUser />\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport const Init: React.FC = () => {\r\n  return (\r\n    <div className=\"h-screen flex justify-center items-center\">\r\n      <Spin\r\n        size=\"large\"\r\n        tip={<span className=\"text-lg\">Loading app . . .</span>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { template } from './../../app/api';\r\nimport { AuthData, Response, User } from './../../app/types';\r\nimport { SignInData } from './authSlice';\r\n\r\nexport const authAPI = {\r\n  authorize: () => {\r\n    return template.get<Response<AuthData>>('session');\r\n  },\r\n\r\n  signIn: ({ login, password }: SignInData) => {\r\n    return template.post<Response<AuthData>>('session', {\r\n      login,\r\n      password,\r\n    });\r\n  },\r\n\r\n  signUp: (user: User) => {\r\n    return template.post<Response<AuthData>>('user', {\r\n      ...user,\r\n    });\r\n  },\r\n\r\n  signOut: () => {\r\n    return template.delete<Response<AuthData>>('session');\r\n  },\r\n};\r\n","import { AuthData } from './../../app/types';\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { User, Response } from '../../app/types';\r\nimport { authAPI } from './authAPI';\r\nimport { AxiosError } from 'axios';\r\nimport { userChanged, userChannelsChanged } from '../user/userSlice';\r\n\r\nexport interface SignInData {\r\n  login: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthState {\r\n  id: number | null;\r\n\r\n  isAuthorizing: boolean;\r\n  authError: string | null;\r\n\r\n  isSigningIn: boolean;\r\n  signingInError: string | null;\r\n\r\n  isSigningUp: boolean;\r\n  signingUpError: string | null;\r\n\r\n  isSigningOut: boolean;\r\n  signingOutError: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  id: null,\r\n\r\n  isAuthorizing: true,\r\n  authError: null,\r\n\r\n  isSigningIn: false,\r\n  signingInError: null,\r\n\r\n  isSigningUp: false,\r\n  signingUpError: null,\r\n\r\n  isSigningOut: false,\r\n  signingOutError: null,\r\n};\r\n\r\nexport const authorize = createAsyncThunk('auth/authorized', async () => {\r\n  const response = await authAPI.authorize();\r\n\r\n  return response.data;\r\n});\r\n\r\nexport const signIn = createAsyncThunk<\r\n  Response<AuthData>,\r\n  SignInData,\r\n  {\r\n    rejectValue: string;\r\n  }\r\n>(\r\n  'auth/signed_in',\r\n  async ({ login, password }: SignInData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authAPI.signIn({ login, password });\r\n      if (response.data.errors[0]) {\r\n        return rejectWithValue(response.data.errors[0]);\r\n      }\r\n\r\n      return response.data;\r\n    } catch (e) {\r\n      const error = e as AxiosError;\r\n      if (error.response && error.response.status === 401) {\r\n        return rejectWithValue(error.response.data.errors[0]);\r\n      }\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const signUp = createAsyncThunk<\r\n  Response<AuthData>,\r\n  User,\r\n  {\r\n    rejectValue: string;\r\n  }\r\n>('auth/signed_up', async (user: User, { rejectWithValue }) => {\r\n  try {\r\n    const response = await authAPI.signUp(user);\r\n    return response.data;\r\n  } catch (e) {\r\n    const error = e as AxiosError;\r\n    const statuses = [400, 404, 409];\r\n\r\n    if (error.response?.status && statuses.includes(error.response.status)) {\r\n      return rejectWithValue(error.response.data.errors[0]);\r\n    } else {\r\n      return rejectWithValue(\r\n        error.response?.statusText ?? 'Some error occured'\r\n      );\r\n    }\r\n  }\r\n});\r\n\r\nexport const signOut = createAsyncThunk(\r\n  'auth/signed_out',\r\n  async (_, { dispatch }) => {\r\n    const response = await authAPI.signOut();\r\n    if (!response.data.errors.length) {\r\n      dispatch(userChanged(null));\r\n      dispatch(userChannelsChanged([]));\r\n    }\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    signingInErrorChanged: (state, action) => {\r\n      state.signingInError = action.payload;\r\n    },\r\n    signingUpErrorChanged: (state, action) => {\r\n      state.signingUpError = action.payload;\r\n    },\r\n\r\n    signingOutErrorChanged: (state, action) => {\r\n      state.signingOutError = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(authorize.pending, (state) => {\r\n        state.isAuthorizing = true;\r\n        state.id = null;\r\n      })\r\n      .addCase(authorize.fulfilled, (state, action) => {\r\n        state.isAuthorizing = false;\r\n        state.authError = null;\r\n        if (!action.payload.errors.length && action.payload.data.id) {\r\n          state.id = action.payload.data.id;\r\n        }\r\n      })\r\n      .addCase(authorize.rejected, (state, action) => {\r\n        state.authError = action.error.message ?? null;\r\n        state.isAuthorizing = false;\r\n      })\r\n\r\n      .addCase(signIn.pending, (state) => {\r\n        state.isSigningIn = true;\r\n      })\r\n      .addCase(signIn.fulfilled, (state, action) => {\r\n        state.isSigningIn = false;\r\n        if (action.payload.data.id) {\r\n          state.id = action.payload.data.id;\r\n        }\r\n      })\r\n      .addCase(signIn.rejected, (state, action) => {\r\n        state.signingInError = action.payload ?? null;\r\n        state.isSigningIn = false;\r\n      })\r\n\r\n      .addCase(signUp.pending, (state) => {\r\n        state.isSigningUp = true;\r\n      })\r\n      .addCase(signUp.fulfilled, (state, action) => {\r\n        state.isSigningUp = false;\r\n        if (!action.payload.errors.length && action.payload.data.id) {\r\n          state.id = action.payload.data.id;\r\n        }\r\n      })\r\n      .addCase(signUp.rejected, (state, action) => {\r\n        state.signingUpError = action.payload ?? null;\r\n        state.isSigningUp = false;\r\n      })\r\n\r\n      .addCase(signOut.pending, (state) => {\r\n        state.isSigningOut = true;\r\n      })\r\n      .addCase(signOut.fulfilled, (state) => {\r\n        state.isSigningOut = false;\r\n        state.id = null;\r\n      })\r\n      .addCase(signOut.rejected, (state, action) => {\r\n        state.signingOutError = action.error.message ?? null;\r\n        state.isSigningOut = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  signingInErrorChanged,\r\n  signingUpErrorChanged,\r\n  signingOutErrorChanged,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { Button, Result } from 'antd';\r\nimport React from 'react';\r\nimport { useAppDispatch } from '../app/hooks';\r\nimport { init } from '../features/app/appSlice';\r\nimport { authorize } from '../features/auth/authSlice';\r\n\r\ninterface Props {\r\n  error: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const InitError: React.FC<Props> = ({ error, loading }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const clickHandler = () => {\r\n    dispatch(authorize());\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen flex justify-center items-center\">\r\n      <Result\r\n        status=\"warning\"\r\n        title=\"Виникла помилка під час завантаження додатку\"\r\n        subTitle={error}\r\n        extra={\r\n          <Button type=\"primary\" onClick={clickHandler} loading={loading}>\r\n            Спробувати ще раз\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Result } from 'antd';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nexport const NotFound: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const clickHandler = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex justify-center items-center\">\r\n      <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Вибачте, такої сторінки не існує\"\r\n        extra={\r\n          <Button type=\"primary\" onClick={clickHandler}>\r\n            На головну\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Form, Input, Button, Upload, Avatar, Space } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport {\r\n  useAppSelector,\r\n  useErrorMessage,\r\n  useImageUpload,\r\n  useSuccessMessage,\r\n} from '../app/hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  updateSucceedChanged,\r\n  updateUser,\r\n  updatingErrorChanged,\r\n} from '../features/user/userSlice';\r\nimport { signingOutErrorChanged, signOut } from '../features/auth/authSlice';\r\n\r\nexport interface SettingsFormValues {\r\n  name: string;\r\n  department: string;\r\n  group?: string;\r\n}\r\n\r\nexport const Settings: React.FC = () => {\r\n  const user = useAppSelector((state) => state.user.user);\r\n  const isUpdating = useAppSelector((state) => state.user.isUpdating);\r\n  const updateSucceed = useAppSelector((state) => state.user.updateSucceed);\r\n  const updatingError = useAppSelector((state) => state.user.updatingError);\r\n  const signingOutError = useAppSelector((state) => state.auth.signingOutError);\r\n\r\n  useErrorMessage(signingOutError, signingOutErrorChanged);\r\n  useErrorMessage(updatingError, updatingErrorChanged);\r\n  useSuccessMessage('Зміни застосовані', updateSucceed, updateSucceedChanged);\r\n\r\n  const dispatch = useDispatch();\r\n  const { img, handleChange, beforeUpload, dummyRequest } = useImageUpload(\r\n    user?.photo ?? null\r\n  );\r\n\r\n  const submitHandler = (values: SettingsFormValues) => {\r\n    dispatch(updateUser({ ...values, photo: img }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-5 ml-auto mr-auto self-center\">\r\n      <div>\r\n        <Upload\r\n          name=\"avatar\"\r\n          showUploadList={false}\r\n          beforeUpload={beforeUpload}\r\n          customRequest={dummyRequest}\r\n          onChange={handleChange}\r\n        >\r\n          <Avatar size={200} shape=\"square\" src={img} icon={<UserOutlined />} />\r\n        </Upload>\r\n      </div>\r\n\r\n      <div className=\"w-96\">\r\n        <Form name=\"settings\" onFinish={submitHandler}>\r\n          <Form.Item\r\n            name=\"name\"\r\n            initialValue={user?.name}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Будь ласка, введіть своє ім'я\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"П.І.Б.\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"department\"\r\n            initialValue={user?.department}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Будь ласка, введіть назву вашої кафедри',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input value={user?.department} placeholder=\"Ваша кафедра\" />\r\n          </Form.Item>\r\n\r\n          {user?.status === 'student' && (\r\n            <Form.Item\r\n              name=\"group\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Будь ласка, введіть назву вашої групи',\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n              initialValue={user.group}\r\n            >\r\n              <Input placeholder=\"Ваша група\" />\r\n            </Form.Item>\r\n          )}\r\n\r\n          <Form.Item>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\" loading={isUpdating}>\r\n                Застосувати зміни\r\n              </Button>\r\n\r\n              <Button onClick={() => dispatch(signOut())}>\r\n                Вийти з акаунту\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { useAppSelector } from '../../app/hooks';\r\n\r\nexport const useRedirectFromAuth = () => {\r\n  const authId = useAppSelector((state) => state.auth.id);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (authId) {\r\n      navigate('/');\r\n    }\r\n  }, [authId, navigate]);\r\n};\r\n","import React from 'react';\r\nimport { UserBasic, WithPassword } from '../app/types';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRedirectFromAuth } from '../features/auth/hooks';\r\nimport { useAppSelector, useAppDispatch, useErrorMessage } from '../app/hooks';\r\nimport { signIn, signingInErrorChanged } from '../features/auth/authSlice';\r\n\r\ntype FormValues = Pick<UserBasic, 'login'> & WithPassword;\r\n\r\nexport const SignIn: React.FC = () => {\r\n  const isLoading = useAppSelector((state) => state.auth.isSigningIn);\r\n  const error = useAppSelector((state) => state.auth.signingInError);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useRedirectFromAuth();\r\n  useErrorMessage(error, signingInErrorChanged);\r\n\r\n  const submitHandler = (values: FormValues) => {\r\n    dispatch(signIn(values));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-96 ml-auto mr-auto self-center\">\r\n      <Form name=\"login\" onFinish={submitHandler}>\r\n        <Form.Item\r\n          name=\"login\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Будь ласка, введіть логін',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Логін\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Будь ласка, введіть пароль',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Пароль\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n            Війти\r\n          </Button>\r\n          <Link to=\"/sign-up\">\r\n            <div className=\"inline-block text-blue-500 py-1 px-3 hover:text-blue-400 focus:text-blue-400\">\r\n              Зареєструватися\r\n            </div>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nimport { Status, User, WithPassword } from '../app/types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRedirectFromAuth } from '../features/auth/hooks';\r\nimport { useAppDispatch, useAppSelector, useErrorMessage } from '../app/hooks';\r\nimport { signingUpErrorChanged, signUp } from '../features/auth/authSlice';\r\n\r\nconst { Option } = Select;\r\n\r\ntype FormValues = User & WithPassword;\r\n\r\nexport const SignUp: React.FC = () => {\r\n  const isLoading = useAppSelector((state) => state.auth.isSigningUp);\r\n  const error = useAppSelector((state) => state.auth.signingUpError);\r\n  const dispatch = useAppDispatch();\r\n  useErrorMessage(error, signingUpErrorChanged);\r\n  const [status, setStatus] = useState<Status | null>(null);\r\n  useRedirectFromAuth();\r\n\r\n  const statusChangeHandler = (value: Status) => {\r\n    setStatus(value);\r\n  };\r\n\r\n  const submitHandler = (values: FormValues) => {\r\n    dispatch(signUp(values));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-96 ml-auto mr-auto self-center\">\r\n      <Form name=\"registration\" onFinish={submitHandler}>\r\n        <Form.Item\r\n          name=\"login\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Будь ласка, введіть логін',\r\n              whitespace: true,\r\n            },\r\n\r\n            {\r\n              min: 4,\r\n              message: 'Логін повинен бути не коротше за 4 символи',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Логін\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Будь ласка, введіть пароль',\r\n              whitespace: true,\r\n            },\r\n            {\r\n              min: 6,\r\n              message: 'Пароль повинен бути не коротше за 6 символів',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Пароль\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Будь ласка, введіть своє ім'я\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"П.І.Б.\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"status\"\r\n          rules={[\r\n            { required: true, message: 'Будь ласка, оберіть свій статус' },\r\n          ]}\r\n        >\r\n          <Select placeholder=\"Ваш статус\" onChange={statusChangeHandler}>\r\n            <Option value=\"student\">Студент</Option>\r\n            <Option value=\"lecturer\">Викладач</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"department\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Будь ласка, введіть назву Вашої кафедри',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Ваша кафедра\" />\r\n        </Form.Item>\r\n\r\n        {status === 'student' && (\r\n          <Form.Item\r\n            name=\"group\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Будь ласка, введіть назву Вашої групи',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Ваша група\" />\r\n          </Form.Item>\r\n        )}\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n            Зареєструватися\r\n          </Button>\r\n          <Link to=\"/sign-in\">\r\n            <div className=\"inline-block text-blue-500 py-1 px-3 hover:text-blue-400 focus:text-blue-400\">\r\n              Вхід\r\n            </div>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { fetchUser, fetchUserChannels, UserState } from './../user/userSlice';\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface AppState {\r\n  isInit: boolean;\r\n  isIniting: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AppState = {\r\n  isInit: false,\r\n  isIniting: false,\r\n  error: null,\r\n};\r\n\r\nexport const init = createAsyncThunk(\r\n  'app/init',\r\n  async (id: number, { dispatch, getState }) => {\r\n    const state = getState() as { user: UserState };\r\n    return await Promise.all([\r\n      dispatch(fetchUser(id)),\r\n      dispatch(\r\n        fetchUserChannels({\r\n          portion: state.user.lastPortion + 1,\r\n          count: state.user.count,\r\n        })\r\n      ),\r\n    ]);\r\n  }\r\n);\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    initChanged: (state, action) => {\r\n      state.isInit = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(init.pending, (state) => {\r\n        state.isIniting = true;\r\n      })\r\n      .addCase(init.fulfilled, (state) => {\r\n        state.isIniting = false;\r\n        state.isInit = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(init.rejected, (state, action) => {\r\n        state.isIniting = false;\r\n        state.isInit = false;\r\n        state.error = action.error.message ?? null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { initChanged } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router';\r\nimport { useAppSelector } from '../../app/hooks';\r\n\r\ninterface Props {\r\n  children: React.ReactElement<any, any> | null;\r\n}\r\n\r\nexport const PrivateRoute: React.FC<Props> = ({ children }) => {\r\n  const authId = useAppSelector((state) => state.auth.id);\r\n  return authId ? children : <Navigate to=\"/sign-in\" />;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from './app/hooks';\r\nimport { Body } from './components/Body';\r\nimport { Channel } from './components/Channel/Channel';\r\nimport { EmptyMain } from './components/EmptyMain';\r\n\r\nimport { Header } from './components/Header/Header';\r\nimport { Init } from './components/Init';\r\nimport { InitError } from './components/InitError';\r\nimport { NotFound } from './components/NotFound';\r\nimport { Settings } from './components/Settings';\r\nimport { SignIn } from './components/SignIn';\r\nimport { SignUp } from './components/SignUp';\r\nimport { init } from './features/app/appSlice';\r\nimport { authorize } from './features/auth/authSlice';\r\nimport { PrivateRoute } from './features/auth/PrivateRoute';\r\n\r\nexport const App: React.FC = () => {\r\n  const authId = useAppSelector((state) => state.auth.id);\r\n  const isInit = useAppSelector((state) => state.app.isInit);\r\n  const isIniting = useAppSelector((state) => state.app.isIniting);\r\n  const isAuthorizing = useAppSelector((state) => state.auth.isAuthorizing);\r\n  const initError = useAppSelector((state) => state.app.error);\r\n  const authError = useAppSelector((state) => state.auth.authError);\r\n\r\n  const error = initError ?? authError;\r\n  const isLoading = isIniting || isAuthorizing;\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isInit && !initError) {\r\n      dispatch(authorize());\r\n    }\r\n  }, [dispatch, initError, isInit]);\r\n\r\n  useEffect(() => {\r\n    if (authId) {\r\n      dispatch(init(authId));\r\n    }\r\n  }, [authId, dispatch]);\r\n\r\n  if (error) {\r\n    return <InitError error={error} loading={isLoading} />;\r\n  }\r\n\r\n  if (isLoading && !error) return <Init />;\r\n\r\n  return (\r\n    <div className=\"box-border h-screen flex flex-col\">\r\n      <Header />\r\n      <section className=\"flex-grow flex overflow-hidden\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Body />}>\r\n            <Route\r\n              index\r\n              element={\r\n                <PrivateRoute>\r\n                  <EmptyMain />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/channel/:channelId\"\r\n              element={\r\n                <PrivateRoute>\r\n                  <Channel />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/chat/:userId\"\r\n              element={\r\n                <PrivateRoute>\r\n                  <EmptyMain />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/settings\"\r\n              element={\r\n                <PrivateRoute>\r\n                  <Settings />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route path=\"*\" element={<NotFound />} />\r\n          </Route>\r\n          <Route path=\"/sign-in\" element={<SignIn />} />\r\n          <Route path=\"/sign-up\" element={<SignUp />} />\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport userReducer from '../features/user/userSlice';\r\nimport channelReducer from '../features/channel/channelSlice';\r\nimport postReducer from '../features/post/postSlice';\r\n\r\nimport appReducer from '../features/app/appSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    channel: channelReducer,\r\n    post: postReducer,\r\n    app: appReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport { App } from './App';\nimport { store } from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}